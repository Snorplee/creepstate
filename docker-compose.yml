services:
  trumpstein-timeline:
    build: .
    container_name: trumpstein-timeline
    ports:
      - "8847:80"
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://flight_admin:secure_admin_pass_2024!@postgres:5432/trumpstein_flights_db
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=trumpstein_flights_db
      - DATABASE_USER=flight_admin
      - DATABASE_PASSWORD=secure_admin_pass_2024!
    networks:
      - trumpstein-network

  postgres:
    image: postgres:15-alpine
    container_name: trumpstein-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=trumpstein_flights_db
      - POSTGRES_USER=flight_admin
      - POSTGRES_PASSWORD=secure_admin_pass_2024!
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./database/seed_data.sql:/docker-entrypoint-initdb.d/02-seed.sql:ro
      - ./database/import_flights.sql:/docker-entrypoint-initdb.d/03-import.sql:ro
    ports:
      - "5432:5432"
    networks:
      - trumpstein-network
    command: [
      "postgres",
      "-c", "max_connections=200",
      "-c", "shared_buffers=512MB",
      "-c", "effective_cache_size=2GB", 
      "-c", "maintenance_work_mem=128MB",
      "-c", "checkpoint_completion_target=0.9",
      "-c", "wal_buffers=32MB",
      "-c", "default_statistics_target=100",
      "-c", "random_page_cost=1.1",
      "-c", "effective_io_concurrency=200",
      "-c", "work_mem=8MB"
    ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flight_admin -d trumpstein_flights_db"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: trumpstein-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trumpstein-network
    command: redis-server --appendonly yes --requirepass secure_redis_pass_2024!

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: trumpstein-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@trumpstein-timeline.local
      - PGADMIN_DEFAULT_PASSWORD=secure_pgadmin_pass_2024!
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - trumpstein-network

networks:
  trumpstein-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

